name: Lint, Build, and Push Dockerfiles
on:
  push:
    branches-ignore:
      - none

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint Dockerfiles
        continue-on-error: true
        run: |
          find . -type f -name 'Dockerfile' -not -path "./.git/*" | while read -r file; do
            echo "Linting Dockerfile in directory: $(dirname "$file")"
            docker run --rm -i hadolint/hadolint < "$file" || true
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Get branch name
        id: vars
        run: echo ::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')

      - name: Build and Push Docker images
        run: |
          find . -type f -name 'Dockerfile' -not -path "./.git/*" | while read -r file; do
            DIR_NAME=$(basename $(dirname "$file"))
            IMAGE_NAME="chainroot/$DIR_NAME"
            BRANCH_NAME=${{ steps.vars.outputs.branch }}
            TAGS="$IMAGE_NAME:$BRANCH_NAME"
            if [[ "$BRANCH_NAME" == "main" ]]; then
              TAGS="$TAGS,$IMAGE_NAME:latest"
            fi
            pushd $(dirname "$file")
            docker buildx build -t $TAGS --push -f Dockerfile .
            popd
          done